---
swagger: "2.0"
info:
  description: "REST API for working with server"
  version: "2.0.0"
  title: "find-mentors API"
host: "find-mentors-api.herokuapp.com"
basePath: "/api/v2"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /authorization/mail/send:
    post:
      tags:
      - "Auth"
      description: "The send mail endpoint send mail to user with verification link"
      operationId: "authorizationSmsSendPOST"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/MailLogin"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/MailLogin"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Auth"
  /authorization/mail/verify:
    post:
      tags:
      - "Auth"
      description: "The verificate mail code endpoint"
      operationId: "authorizationSmsVerifyPOST"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/MailVerify"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/MailVerify"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Auth"
  /chat/messages:
    post:
      tags:
      - "Chat"
      description: "Create new chats message."
      operationId: "chatMessagesPOST"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Message"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Message"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Chat"
  /chat/rooms:
    get:
      tags:
      - "Chat"
      description: "Get list of chats rooms."
      operationId: "chatRoomsGET"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Room"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Chat"
    post:
      tags:
      - "Chat"
      description: "Create new chat."
      operationId: "chatRoomsPOST"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Room"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Room"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Chat"
  /chat/rooms/{id}:
    put:
      tags:
      - "Chat"
      description: "Edit chat room."
      operationId: "chatRoomsIdPUT"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "number"
        format: "int32"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Room"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Room"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Chat"
    delete:
      tags:
      - "Chat"
      description: "Delete chat room."
      operationId: "chatRoomsIdDELETE"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "number"
        format: "int32"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Empty"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Chat"
  /items:
    get:
      tags:
      - "Item"
      description: "Get list of items."
      operationId: "itemsGET"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/inline_response_200"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Item"
    post:
      tags:
      - "Item"
      description: "Create new item."
      operationId: "itemPOST"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Item"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Item"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Item"
  /items/{id}:
    put:
      tags:
      - "Item"
      description: "Edit item."
      operationId: "itemPUT"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "number"
        format: "int32"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Item"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Item"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Item"
    delete:
      tags:
      - "Item"
      description: "Delete item."
      operationId: "itemDELETE"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "number"
        format: "int32"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Empty"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Item"
  /profile:
    get:
      tags:
      - "Profile"
      description: "Get user profile."
      operationId: "profileGET"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Profile"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Profile"
    post:
      tags:
      - "Profile"
      description: "Update user profile."
      operationId: "profilePOST"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Profile"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Profile"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Profile"
  /ratings:
    get:
      tags:
      - "Rating"
      description: "Get list of ratings."
      operationId: "raitingsGET"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/inline_response_200_1"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Rating"
    post:
      tags:
      - "Rating"
      description: "Create new rating."
      operationId: "ratingPOST"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Rating"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Rating"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Rating"
  /ratings/{id}:
    put:
      tags:
      - "Rating"
      description: "Edit rating."
      operationId: "ratingPUT"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "number"
        format: "int32"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Rating"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Rating"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Rating"
    delete:
      tags:
      - "Rating"
      description: "Delete rating."
      operationId: "ratingDELETE"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "number"
        format: "int32"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Empty"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Rating"
  /status:
    get:
      tags:
      - "Status"
      description: "Get list of status."
      operationId: "statusGET"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/inline_response_200_2"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Status"
    post:
      tags:
      - "Status"
      description: "Create new status."
      operationId: "statusPOST"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Status"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Status"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Status"
  /status/{id}:
    put:
      tags:
      - "Status"
      description: "Edit status."
      operationId: "statusPUT"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "number"
        format: "int32"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Status"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Status"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Status"
    delete:
      tags:
      - "Status"
      description: "Delete status."
      operationId: "statusDELETE"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "number"
        format: "int32"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Empty"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Status"
  /tags:
    get:
      tags:
      - "Tag"
      description: "Get list of tags."
      operationId: "tagsGET"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/inline_response_200_3"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Tag"
    post:
      tags:
      - "Tag"
      description: "Create new tag."
      operationId: "tagsPOST"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Tag"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Tag"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Tag"
  /tags/{id}:
    put:
      tags:
      - "Tag"
      description: "Edit tag."
      operationId: "tagsPUT"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "number"
        format: "int32"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Tag"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Tag"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Tag"
    delete:
      tags:
      - "Chat"
      description: "Delete tag."
      operationId: "tagsDELETE"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "number"
        format: "int32"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Empty"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Chat"
  /tasks:
    get:
      tags:
      - "Task"
      description: "Get list of tasks."
      operationId: "tasksGET"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/inline_response_200_4"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Task"
    post:
      tags:
      - "Task"
      description: "Create new tasks."
      operationId: "taskPOST"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Task"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Task"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Task"
  /tasks/{id}:
    put:
      tags:
      - "Task"
      description: "Edit task."
      operationId: "taskPUT"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "number"
        format: "int32"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Task"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Task"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Task"
    delete:
      tags:
      - "Task"
      description: "Delete task."
      operationId: "taskDELETE"
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "number"
        format: "int32"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Empty"
        default:
          description: "error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Task"
definitions:
  Tag:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "number"
      name:
        type: "string"
      image:
        type: "number"
      description:
        type: "string"
  Rating:
    type: "object"
    required:
    - "tag"
    - "user"
    - "value"
    properties:
      id:
        type: "number"
      user:
        type: "number"
      tag:
        type: "number"
      value:
        type: "number"
  Task:
    type: "object"
    required:
    - "author"
    - "name"
    - "rating"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      rating:
        type: "number"
      author:
        type: "number"
  Item:
    type: "object"
    properties:
      name:
        type: "string"
      time:
        type: "string"
      description:
        type: "string"
  Status:
    type: "object"
    properties:
      check:
        type: "boolean"
      time:
        type: "string"
      item:
        type: "number"
      user:
        type: "number"
  MailLogin:
    type: "object"
    required:
    - "mail"
    properties:
      id:
        type: "integer"
      mail:
        type: "string"
  MailVerify:
    type: "object"
    required:
    - "code"
    - "id"
    properties:
      id:
        type: "integer"
      code:
        type: "string"
  Profile:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
      last_name:
        type: "string"
      company:
        type: "string"
      avatar:
        type: "integer"
  Room:
    type: "object"
    required:
    - "active"
    - "name"
    - "type"
    properties:
      active:
        type: "boolean"
      type:
        type: "string"
        enum:
        - "public"
        - "private"
      name:
        type: "string"
      members:
        type: "array"
        items:
          $ref: "#/definitions/Profile"
  Message:
    type: "object"
    required:
    - "body"
    - "room"
    properties:
      id:
        type: "number"
        format: "int32"
      body:
        type: "string"
      room:
        $ref: "#/definitions/Room"
  Empty:
    type: "object"
  Error:
    type: "object"
    required:
    - "code"
    - "status"
    properties:
      code:
        type: "integer"
        format: "int32"
      status:
        type: "string"
      message:
        type: "string"
  Pagination:
    type: "object"
    properties:
      rowCount:
        type: "integer"
      pageCount:
        type: "integer"
      page:
        type: "integer"
      pageSize:
        type: "integer"
  inline_response_200:
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Item"
      pagination:
        $ref: "#/definitions/Pagination"
  inline_response_200_1:
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Rating"
      pagination:
        $ref: "#/definitions/Pagination"
  inline_response_200_2:
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Status"
      pagination:
        $ref: "#/definitions/Pagination"
  inline_response_200_3:
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Tag"
      pagination:
        $ref: "#/definitions/Pagination"
  inline_response_200_4:
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Task"
      pagination:
        $ref: "#/definitions/Pagination"
